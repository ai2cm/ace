name: tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

  # Add a button to manually trigger the workflow
  workflow_dispatch:

jobs:
  cpu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set environment variables
        run: |
          echo "CURRENT_WEEK=$(date +'%Y-%U')" >> $GITHUB_ENV
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - uses: actions/cache@v4
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.CURRENT_WEEK }}-${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('dev-requirements.txt') }}-${{ hashFiles('constraints.txt') }}
      - name: Install dependencies
        run: |
          python -m pip install uv
          uv pip install --system -c constraints.txt -e .[dev]
      - name: Run pytest
        run: |
          make test
  cpu-very-fast:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set environment variables
        run: |
          echo "CURRENT_WEEK=$(date +'%Y-%U')" >> $GITHUB_ENV
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - uses: actions/cache@v4
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.CURRENT_WEEK }}-${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('dev-requirements.txt') }}-${{ hashFiles('constraints.txt') }}
      - name: Install dependencies
        run: |
          python -m pip install uv
          uv pip install --system -c constraints.txt -e .[dev]
      - name: Run pytest
        run: |
          make test_very_fast
  gpu:
    # These steps run on our self-hosted k8s GPU runners. See below for setup notes
    # https://github.com/ai2cm/long-lived-infrastructure#installing-the-github-actions-runner-controller
    runs-on: arc-runner-set
    steps:
      - uses: actions/checkout@v3
      - name: Set environment variables
        run: |
          echo "CURRENT_WEEK=$(date +'%Y-%U')" >> $GITHUB_ENV
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - uses: actions/cache@v4
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.CURRENT_WEEK }}-${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('dev-requirements.txt') }}-${{ hashFiles('constraints.txt') }}
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y make git
          python -m pip install uv
          uv pip install --system -c constraints.txt -e .[dev]
      - name: Run CUDA check and pytest
        run: |
            export PATH=/usr/local/nvidia/bin:${PATH}
            export LD_LIBRARY_PATH=/usr/local/nvidia/lib64:${LD_LIBRARY_PATH}
            python3 fme/require_gpu.py
            make test
  beaker-evaluator:
    runs-on: ubuntu-latest
    # Only deploy on manual trigger or push to main
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && github.ref == 'refs/heads/main') }}
    env:
      BEAKER_TOKEN: ${{ secrets.BEAKER_TOKEN }}
      BEAKER_IMAGE: oliverwm/fme-deps-only-2025-01-16
      BEAKER_WORKSPACE: ai2/ace-ci-tests
    steps:
      - name: Determine current commit SHA (pull request)
        if: github.event_name == 'pull_request'
        run: |
          echo "COMMIT_SHA=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV

      - name: Determine current commit SHA (push)
        if: github.event_name != 'pull_request'
        run: |
          echo "COMMIT_SHA=$GITHUB_SHA" >> $GITHUB_ENV

      - name: Shortened commit SHA
        run: |
          echo "COMMIT_SHA_SHORT=$(echo "$GITHUB_SHA" | cut -c1-6)" >> $GITHUB_ENV

      - name: Integration tests
        uses: allenai/beaker-run-action@v1.2
        with:
          spec: |
            version: v2
            description: CI standalone inference evaluator test
            budget: ai2/climate
            tasks:
              - name: ace-inference-test
                image:
                  beaker: ${{ env.BEAKER_IMAGE }}
                context:
                  priority: normal
                  preemptible: true
                resources:
                  gpuCount: 1
                  sharedMemory: 10 GiB
                constraints:
                  cluster:
                    - ai2/saturn-cirrascale
                    - ai2/jupiter-cirrascale-2
                    - ai2/augusta-google-1
                datasets:
                  - mountPath: /test-default
                    source:
                      beaker: elynn/ci-inference
                envVars:
                  - name: COMMIT_SHA
                    value: ${{ env.COMMIT_SHA }}
                  - name: TMP_GITHUB_TOKEN
                    value: ${{ secrets.GITHUB_TOKEN }}
                command: ["/entrypoint.sh", "python", "-m", "fme.ace.evaluator", "/workspace/evaluator-config.yaml"]
                result:
                  path: /results
          token: ${{ env.BEAKER_TOKEN }}
          workspace: ${{ env.BEAKER_WORKSPACE }}
          name: ci-ace-evaluator-${{ env.COMMIT_SHA_SHORT }}

